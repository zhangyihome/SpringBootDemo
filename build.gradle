buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

ext {
    keycloakVersion = '4.2.0.Final'
    springStatemachineVersion = '2.0.1.RELEASE'
    vaadinVersion = '10.0.5'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    // JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    compile 'org.springframework.boot:spring-boot-starter-jdbc'
    compile 'org.springframework.boot:spring-boot-starter-aop'

    //compile 'com.alibaba:druid-spring-boot-starter:1.1.6'

    // Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'

    compile 'org.springframework.boot:spring-boot-starter-mail'

    compile 'org.apache.shiro:shiro-spring:1.4.0'
    compile 'org.apache.shiro:shiro-ehcache:1.4.0'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'com.github.theborakompanioni:thymeleaf-extras-shiro:2.0.0'

    //compile('org.springframework.boot:spring-boot-starter-security')
    //runtime('org.springframework.boot:spring-boot-devtools')

//    compile('org.springframework.boot:spring-boot-starter-activemq')
//    compile('org.springframework.boot:spring-boot-starter-amqp')
//    compile('org.springframework.boot:spring-boot-starter-aop')
//    compile('org.springframework.boot:spring-boot-starter-artemis')
//    compile('org.springframework.boot:spring-boot-starter-batch')
//    compile('org.springframework.boot:spring-boot-starter-cache')
//    compile('org.springframework.boot:spring-boot-starter-data-cassandra')
//    compile('org.springframework.boot:spring-boot-starter-data-cassandra-reactive')
//    compile('org.springframework.boot:spring-boot-starter-data-couchbase')
//    compile('org.springframework.boot:spring-boot-starter-data-couchbase-reactive')
//    compile('org.springframework.boot:spring-boot-starter-data-elasticsearch')
//    compile('org.springframework.boot:spring-boot-starter-data-jpa')
//    compile('org.springframework.boot:spring-boot-starter-data-ldap')
//    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
//    compile('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
//    compile('org.springframework.boot:spring-boot-starter-data-neo4j')
//    compile('org.springframework.boot:spring-boot-starter-data-redis')
//    compile('org.springframework.boot:spring-boot-starter-data-redis-reactive')
//    compile('org.springframework.boot:spring-boot-starter-data-rest')
//    compile('org.springframework.boot:spring-boot-starter-data-solr')
//    compile('org.springframework.boot:spring-boot-starter-freemarker')
//    compile('org.springframework.boot:spring-boot-starter-groovy-templates')
//    compile('org.springframework.boot:spring-boot-starter-hateoas')
//    compile('org.springframework.boot:spring-boot-starter-integration')
//    compile('org.springframework.boot:spring-boot-starter-jdbc')
//    compile('org.springframework.boot:spring-boot-starter-jersey')
//    compile('org.springframework.boot:spring-boot-starter-jooq')
//    compile('org.springframework.boot:spring-boot-starter-mail')
//    compile('org.springframework.boot:spring-boot-starter-mustache')
//    compile('org.springframework.boot:spring-boot-starter-quartz')
//    compile('org.springframework.boot:spring-boot-starter-security')
//    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
//    compile('org.springframework.boot:spring-boot-starter-validation')
//    compile('org.springframework.boot:spring-boot-starter-web-services')
//    compile('org.springframework.boot:spring-boot-starter-webflux')
//    compile('org.springframework.boot:spring-boot-starter-websocket')
//    compile('com.vaadin:vaadin-spring-boot-starter')
//    compile('org.apache.camel:camel-spring-boot-starter:2.22.1')
//    compile('org.apache.cxf:cxf-spring-boot-starter-jaxrs:3.2.5')
//    compile('org.apache.kafka:kafka-streams')
//    compile('org.flywaydb:flyway-core')
//    compile('org.keycloak:keycloak-spring-boot-starter')
//    compile('org.liquibase:liquibase-core')
//    compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
//    compile('org.springframework.data:spring-data-rest-hal-browser')
//    compile('org.springframework.kafka:spring-kafka')
//    compile('org.springframework.retry:spring-retry')
//    compile('org.springframework.session:spring-session-data-redis')
//     compile('org.springframework.session:spring-session-jdbc')
//    compile('org.springframework.shell:spring-shell-starter:2.0.0.RELEASE')
//    compile('org.springframework.statemachine:spring-statemachine-starter')
//    runtime('org.springframework.boot:spring-boot-devtools')
//    runtime('com.h2database:h2')
//    runtime('com.microsoft.sqlserver:mssql-jdbc')
//    runtime('mysql:mysql-connector-java')
//    runtime('org.apache.derby:derby')
//    runtime('org.hsqldb:hsqldb')
//    runtime('org.postgresql:postgresql')
//    compileOnly('org.springframework.boot:spring-boot-configuration-processor')
//    compileOnly('org.projectlombok:lombok')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.statemachine:spring-statemachine-bom:${springStatemachineVersion}"
        mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
        mavenBom "org.keycloak.bom:keycloak-adapter-bom:${keycloakVersion}"
    }
}
